.search-wrap
	%section{:'ng-controller' => 'ytsController'}
		.search-box
			%input{:type => "text", :placeholder => "Which video are you looking for?", :'ng-model' => "query", :id => "q", :autocomplete => "off"}/
		.search-results
			%ul.no-ul.m0.p0.ul-ib
				%li{:'ng-repeat' => "v in ytvideos"}
					%yt-video{:video => 'v', :add => "enqueue(v)"}

.player
	.intrinsic-wrap 
		#player

.wrap
	.tx-r.sc-top
		%button.button{:'ng-class' => "{'icon-pause': playing, 'icon-play': !playing}", :'ng-click' => "playpause()"}
		%button.button{:'ng-class' => "{'icon-mute': !muted, 'icon-volume': muted}", :'ng-click' => "mute()"}
		%button.button.icon-skip-back{:'ng-click' => "previous()"}
		%button.button.icon-skip-forward{:'ng-click' => "next()"}
		%button.button.icon-grid{:'ng-click' => "togglegrid()", :'ng-class' => "{type4:grid}"}		
		%button.button.icon-shuffle{:'ng-click' => "shuffle()", :'ng-class' => "{type4:shuffled}"}
		%button.button.icon-layers.popup-with-zoom-anim{:href => "#small-dialog"}
		%button.button.icon-save{:'ng-click' => "sync()"}
		= #%button.button.icon-help
	.sc-mid
		.videos-grid
			%jk-video{:'ng-repeat' => "video in playlist track by $index", :video => "video", :pushfxq => "pushfxq(video)", :playvideo => "playvideo(video)", :remove => 'remove($index)', :undo => "undo($index)", :'repeat-edge' => true}
	.sc-bottom
		%section
			.pl
				%jk-seek{:action => "seekTo(n)", :seek => "seek", :modclass => "seek", :init => "0", :txt => "Video"}
			.vl
				%jk-seek{:action => "seekvolume(n)", :modclass => "volume", :init => "80", :txt => "Volume"}